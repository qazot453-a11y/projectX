from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton

def get_main_keyboard(has_matrices=False):
    keyboard = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é –º–∞—Ç—Ä–∏—Ü—É")]
        ],
        resize_keyboard=True
    )
    
    if has_matrices:
        keyboard.keyboard.extend([
            [KeyboardButton(text="üìä –í—ã–≤–µ—Å—Ç–∏ –º–∞—Ç—Ä–∏—Ü—É")],
            [KeyboardButton(text="üßÆ –û–ø–µ—Ä–∞—Ü–∏–∏ —Å –º–∞—Ç—Ä–∏—Ü–∞–º–∏")]
        ])
    
    return keyboard

def get_operations_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –æ–ø–µ—Ä–∞—Ü–∏—è–º–∏ –Ω–∞–¥ –º–∞—Ç—Ä–∏—Ü–∞–º–∏"""
    keyboard_lines = [
        [InlineKeyboardButton(text="üî¢ –î–µ—Ç–µ—Ä–º–∏–Ω–∞–Ω—Ç", callback_data="op_det"),
         InlineKeyboardButton(text="üìà –†–∞–Ω–≥ –º–∞—Ç—Ä–∏—Ü—ã", callback_data="op_rank")],
        [InlineKeyboardButton(text="‚úñÔ∏è –£–º–Ω–æ–∂–∏—Ç—å –Ω–∞ —Å–∫–∞–ª—è—Ä", callback_data="op_scalar"),
         InlineKeyboardButton(text="‚ùì –°–∏–Ω–≥—É–ª—è—Ä–Ω–æ—Å—Ç—å", callback_data="op_singular")],
        [InlineKeyboardButton(text="‚ûï –°–ª–æ–∂–µ–Ω–∏–µ", callback_data="op_add"),
         InlineKeyboardButton(text="‚ûñ –í—ã—á–∏—Ç–∞–Ω–∏–µ", callback_data="op_sub")],
        [InlineKeyboardButton(text="‚úñÔ∏è –£–º–Ω–æ–∂–µ–Ω–∏–µ –º–∞—Ç—Ä–∏—Ü", callback_data="op_multiply")],
        [InlineKeyboardButton(text="üîÑ –¢—Ä–∞–Ω—Å–ø–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ", callback_data="op_transpose"),
         InlineKeyboardButton(text="üîÑ –û–±—Ä–∞—Ç–Ω–∞—è –º–∞—Ç—Ä–∏—Ü–∞", callback_data="op_inverse")],
        [InlineKeyboardButton(text="üìê –ê–ª–≥. –¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ", callback_data="op_complement")],
        [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="op_back")]
    ]
    
    return InlineKeyboardMarkup(inline_keyboard=keyboard_lines)

def get_size_keyboard():
    # –°–æ–∑–¥–∞–µ–º —Å–ø–∏—Å–æ–∫ —Å—Ç—Ä–æ–∫ –¥–ª—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã 5x5
    keyboard_lines = []
    
    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –æ—Ç 1x1 –¥–æ 5x5
    for i in range(1, 6):
        row_buttons = []
        for j in range(1, 6):
            row_buttons.append(InlineKeyboardButton(
                text=f"{i}x{j}", 
                callback_data=f"size_{i}_{j}"
            ))
        keyboard_lines.append(row_buttons)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É —Ä—É—á–Ω–æ–≥–æ –≤–≤–æ–¥–∞
    keyboard_lines.append([InlineKeyboardButton(
        text="‚å®Ô∏è –í–≤–µ—Å—Ç–∏ —Ä–∞–∑–º–µ—Ä –≤—Ä—É—á–Ω—É—é", 
        callback_data="manual_size"
    )])
    
    return InlineKeyboardMarkup(inline_keyboard=keyboard_lines)

def get_matrices_list_keyboard(matrices_dict, action="show", selected_matrix=None):
    """
    action: —Ç–∏–ø –æ–ø–µ—Ä–∞—Ü–∏–∏
    selected_matrix: —É–∂–µ –≤—ã–±—Ä–∞–Ω–Ω–∞—è –º–∞—Ç—Ä–∏—Ü–∞ (–¥–ª—è –æ–ø–µ—Ä–∞—Ü–∏–π —Å –¥–≤—É–º—è –º–∞—Ç—Ä–∏—Ü–∞–º–∏)
    """
    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–π –º–∞—Ç—Ä–∏—Ü—ã
    buttons = []
    for name in matrices_dict.keys():
        if selected_matrix == name:
            # –ü–æ–º–µ—á–∞–µ–º —É–∂–µ –≤—ã–±—Ä–∞–Ω–Ω—É—é –º–∞—Ç—Ä–∏—Ü—É
            text = f"‚úÖ {name}"
        else:
            text = name
        buttons.append([InlineKeyboardButton(
            text=text, 
            callback_data=f"{action}_{name}"
        )])
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –æ—Ç–º–µ–Ω—ã
    buttons.append([InlineKeyboardButton(
        text="üîô –û—Ç–º–µ–Ω–∞", 
        callback_data="operation_cancel"
    )])
    
    return InlineKeyboardMarkup(inline_keyboard=buttons)

def get_save_matrix_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –æ–ø–µ—Ä–∞—Ü–∏–∏"""
    return InlineKeyboardMarkup(inline_keyboard=[[
        InlineKeyboardButton(
            text="üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç", 
            callback_data="save_result"
        )
    ]])

def get_delete_matrices_keyboard(matrices_dict):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –º–∞—Ç—Ä–∏—Ü"""
    buttons = []
    for name in matrices_dict.keys():
        buttons.append([InlineKeyboardButton(
            text=f"‚ùå {name}", 
            callback_data=f"delete_{name}"
        )])
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –æ—Ç–º–µ–Ω—ã
    buttons.append([InlineKeyboardButton(
        text="üîô –û—Ç–º–µ–Ω–∞", 
        callback_data="delete_cancel"
    )])
    
    return InlineKeyboardMarkup(inline_keyboard=buttons)